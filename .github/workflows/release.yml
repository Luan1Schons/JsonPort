name: Release to PyPI

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine pytest pytest-cov black flake8 mypy
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v --tb=short
    
    - name: Check code quality
      run: |
        python -m black --check jsonport/ tests/
        python -m flake8 jsonport/ tests/
        python -m mypy jsonport/
    
    - name: Build package
      run: |
        python -m build
    
    - name: Publish to PyPI
      if: matrix.python-version == '3.11'  # Publica apenas uma vez
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m twine upload dist/*
    
    - name: Extract changelog
      if: matrix.python-version == '3.11'  # Extrai apenas uma vez
      run: |
        python -c "
        import re
        
        version = '${{ github.ref_name }}'
        
        with open('CHANGELOG.md', 'r') as f:
            content = f.read()
        
        # Encontrar a seção da versão
        pattern = r'## \[(' + re.escape(version) + r')\].*?\n(.*?)(?=\n## \[|\n\[Unreleased\]:|\Z)'
        match = re.search(pattern, content, re.DOTALL)
        
        if match:
            changelog_content = match.group(2).strip()
            # Remover linhas vazias no início e fim
            changelog_content = '\n'.join(line for line in changelog_content.split('\n') if line.strip())
            print(changelog_content)
        else:
            print('No changelog found for version ' + version)
        " > changelog_content.txt
    
    - name: Create GitHub Release
      if: matrix.python-version == '3.11'  # Cria release apenas uma vez
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## What's Changed
          
          ### Version ${{ github.ref_name }}
          
          $(cat changelog_content.txt)
          
          ## Installation
          
          ```bash
          pip install jsonport==${{ github.ref_name }}
          ```
          
          ## Downloads
          
          - [Source Distribution](https://pypi.org/project/jsonport/${{ github.ref_name }}/#files)
          - [Wheel Distribution](https://pypi.org/project/jsonport/${{ github.ref_name }}/#files)
          
          ## Full Changelog
          
          See [CHANGELOG.md](https://github.com/Luan1Schons/JsonPort/blob/main/CHANGELOG.md) for complete release history.
        draft: false
        prerelease: false 